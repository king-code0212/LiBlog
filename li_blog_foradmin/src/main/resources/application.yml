#app
server:
  port: 8601

#阿里大于
templateCode: SMS_XXXXXX #短信模板编号
signName: 蘑菇博客
#项目名称
PROJECT_NAME: 蘑菇博客

file:
  upload:
    path: D:/mogu_blog/data/

# 邮箱验证
moguBlog:
  email: mogublog@163.com

# 蘑菇博客登录默认密码
DEFAULE_PWD: mogu2018

#博客相关配置
BLOG:
  HOT_COUNT: 5 #热门博客数量
  NEW_COUNT: 15 #最新博客数据
  FIRST_COUNT: 5 #一级推荐
  SECOND_COUNT: 2 #二级推荐
  THIRD_COUNT: 3 #三级推荐
  FOURTH_COUNT: 5 #四级推荐

#spring
spring:
  jackson:
    serialization:
      INDENT_OUTPUT: true
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
  jmx:
    default-domain: mogu_admin
  thymeleaf:
    cache: true   #关闭缓存
  application:
    name: mogu-admin
  security:
    user:
      name: user
      password: password123

  # sleuth 配置
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。
  # zipkin 配置
  zipkin:
    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址

  # DATABASE CONFIG
  datasource:
    username: root
    password: root
    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    # 初始化大小，最小，最大
    initialSize: 20
    minIdle: 5
    maxActive: 200

    #连接等待超时时间
    maxWait: 60000

    #配置隔多久进行一次检测(检测可以关闭的空闲连接)
    timeBetweenEvictionRunsMillis: 60000

    #配置连接在池中的最小生存时间
    minEvictableIdleTimeMillis: 300000

    validationQuery: SELECT 1 FROM DUAL

    dbcp:
      remove-abandoned: true
      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间
      remove-abandoned-timeout: 180

    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true

    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  #redis
  redis:
    host: 127.0.0.1 #redis的主机ip
    port: 6379
    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018

  rabbitmq:
    host: 127.0.0.1 #rabbitmq的主机ip
    port: 5672
    username: guest
    password: guest

  boot:
    admin:
      client:
        enabled: true
        url: http://localhost:8606
        username: user
        password: password123
        instance:
          service-base-url: http://localhost:8601

#eureka相关配置
eureka:
  client:
    healthcheck:
      enabled: true
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 5

# 或者：
feign.hystrix.enabled: false #索性禁用feign的hystrix支持

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.moxi.mogublog.commons.entity
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: UUID
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
      db-type: mysql
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

##jwt配置
tokenHead: bearer_
tokenHeader: Authorization
isRememberMeExpiresSecond: 259200 #记住账号为3天有效
audience:
  clientId: 098f6bcd4621d373cade4e832627b4f6
  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=
  name: mogublog
  expiresSecond: 3600  #1个小时 3600
  refreshSecond: 300 # 刷新token的时间 5分钟